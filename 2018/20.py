s = input()[1:-1]

m = [[[1,1,1,1] for _ in range(100)] for _ in range(100)]

d = {(1,1,1,1): ' ', (1,1,1,0): '╓', (1,1,0,1): '╒', (1,1,0,0): '╔', 
     (1,0,1,1): '╕', (1,0,1,0): '╗', (1,0,0,1): '═', (1,0,0,0): '╦', 
     (0,1,1,1): '╜', (0,1,1,0): '║', (0,1,0,1): '╚', (0,1,0,0): '╠',
     (0,0,1,1): '╝', (0,0,1,0): '╣', (0,0,0,1): '╩', (0,0,0,0): '╬'}

def parse(s, x, y):
    x0, y0 = x, y
    i = 0
    while i < len(s):
        c = s[i]
        if c is 'N':
            m[y][x][0] = 0
            y -= 1
            m[y][x][3] = 0
        elif c is 'S':
            m[y][x][3] = 0
            y += 1
            m[y][x][0] = 0
        elif c is 'E':
            m[y][x][2] = 0
            x += 1
            m[y][x][1] = 0
        elif c is 'W':
            m[y][x][1] = 0
            x -= 1
            m[y][x][2] = 0
        
        elif c is '(':
            cc = 1
            i += 1
            for j in range(i, len(s)):
                c = s[j]
                if c is '(': cc += 1
                if c is ')': cc -= 1
                if cc is 0:
                    parse(s[i:j], x, y)
                    break
            i = j
        elif c is '|':
            x = x0
            y = y0
        i += 1

x,y = 49,50
parse(s, x, y)

for mm in m: print(''.join([d[tuple(mmm)] for mmm in mm]))

#from copy import deepcopy
#mc = deepcopy(m)

d = [(0,-1), (-1, 0), (1,0), (0,1)]
s = [(x,y,0,m[y][x])]
m[y][x] = 0
while s:
    x,y,i,n = s.pop(0)
    for j in range(4):
        if n[j] is 0 and type(m[y+d[j][1]][x+d[j][0]]) == list:
            s.append((x+d[j][0], y+d[j][1], i+1, m[y+d[j][1]][x+d[j][0]]))
            m[y+d[j][1]][x+d[j][0]] = i+1

mx = 0
rc = 0
for mm in m:
    if max(mm) > mx:
        mx = max(mm)
    for mmm in mm:
        if mmm >= 1000:
            rc += 1

print(mx, rc)

"""
dd ={(1,1,1,1): [[1,1,1,1,1], [1,0,0,0,1], [1,0,0,0,1], [1,0,0,0,1], [1,1,1,1,1]],
     (1,1,1,0): [[1,1,1,1,1], [1,0,0,0,1], [1,0,0,0,1], [1,0,0,0,1], [1,0,0,0,1]],
     (1,1,0,1): [[1,1,1,1,1], [1,0,0,0,0], [1,0,0,0,0], [1,0,0,0,0], [1,1,1,1,1]],
     (1,1,0,0): [[1,1,1,1,1], [1,0,0,0,0], [1,0,0,0,0], [1,0,0,0,0], [1,0,0,0,1]],
     (1,0,1,1): [[1,1,1,1,1], [0,0,0,0,1], [0,0,0,0,1], [0,0,0,0,1], [1,1,1,1,1]],
     (1,0,1,0): [[1,1,1,1,1], [0,0,0,0,1], [0,0,0,0,1], [0,0,0,0,1], [1,0,0,0,1]], 
     (1,0,0,1): [[1,1,1,1,1], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [1,1,1,1,1]], 
     (1,0,0,0): [[1,1,1,1,1], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [1,0,0,0,1]], 
     (0,1,1,1): [[1,0,0,0,1], [1,0,0,0,1], [1,0,0,0,1], [1,0,0,0,1], [1,1,1,1,1]],
     (0,1,1,0): [[1,0,0,0,1], [1,0,0,0,1], [1,0,0,0,1], [1,0,0,0,1], [1,0,0,0,1]],
     (0,1,0,1): [[1,0,0,0,1], [1,0,0,0,0], [1,0,0,0,0], [1,0,0,0,0], [1,1,1,1,1]],
     (0,1,0,0): [[1,0,0,0,1], [1,0,0,0,0], [1,0,0,0,0], [1,0,0,0,0], [1,0,0,0,1]],
     (0,0,1,1): [[1,0,0,0,1], [0,0,0,0,1], [0,0,0,0,1], [0,0,0,0,1], [1,1,1,1,1]], 
     (0,0,1,0): [[1,0,0,0,1], [0,0,0,0,1], [0,0,0,0,1], [0,0,0,0,1], [1,0,0,0,1]], 
     (0,0,0,1): [[1,0,0,0,1], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [1,1,1,1,1]],
     (0,0,0,0): [[1,0,0,0,1], [0,0,0,0,0], [0,0,0,0,0], [0,0,0,0,0], [1,0,0,0,1]]}

from PIL import Image
image = Image.new('L', (500, 500))
image.putdata([0 if dd[tuple(mc[y//5][x//5])][y%5][x%5] is 1 else 256-m[y//5][x//5]//(mx/240) for y in range(500) for x in range(500)])
image = image.resize((1000,1000), Image.NEAREST)
image.save("advent20.png")
"""